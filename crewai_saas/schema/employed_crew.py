from typing import ClassVar
from typing import Optional
from datetime import datetime

from crewai_saas.schema.base import CreateBase, InDBBase, ResponseBase, UpdateBase

#   public.employed_crew (
#     id bigint generated by default as identity not null,
#     created_at timestamp without time zone not null default now(),
#     crew_id bigint null,
#     is_favorite boolean not null default false,
#     user_id bigint not null,
#     is_deleted boolean not null default false,
#     constraint employed_crew_pkey primary key (id),
#     constraint employed_crew_id_key unique (id),
#     constraint employed_crew_crew_id_fkey foreign key (crew_id) references crew (id)

class EmployedCrewCreate(CreateBase):
    crew_id: int
    user_id: int

class EmployedCrewUpdate(UpdateBase):
    is_favorite: bool

class EmployedCrew(ResponseBase):
    crew_id: int
    user_id: int
    is_favorite: bool
    is_deleted: bool

    table_name: ClassVar[str] = "employed_crew"

class EmployedCrewInDB(InDBBase):
    crew_id: int
    user_id: int
    is_favorite: bool
    is_deleted: bool


# chat
#   public.chat (
#     id bigint generated by default as identity not null,
#     created_at timestamp without time zone not null default now(),
#     updated_at timestamp without time zone not null default now(),
#     employed_crew_id bigint not null,
#     is_deleted boolean not null,
#     constraint chat_pkey primary key (id),
#     constraint chat_id_key unique (id),
#     constraint chat_cycle_id_fkey foreign key (employed_crew_id) references cycle (id),
#     constraint chat_employed_crew_id_fkey foreign key (employed_crew_id) references employed_crew (id)

class ChatCreate(CreateBase):
    employed_crew_id: int


class ChatUpdate(UpdateBase):
    pass

class Chat(ResponseBase):
    employed_crew_id: int
    is_deleted: bool

    table_name: ClassVar[str] = "chat"

class ChatInDB(InDBBase):
    employed_crew_id: int
    is_deleted: bool






